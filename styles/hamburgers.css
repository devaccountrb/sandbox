/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger2 {
    padding: 4px 15px;
    display: inline-block;
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    margin: 0;
    overflow: visible;
    border: 1px solid #fff;
    border-radius: 5px;
}
.hamburger2:before {
    content: "\f007";
    font-size: 20px;
    font-family: fontawesome;
    margin-right: 10px;
}
  @media (min-width: 700px) {
    .hamburger2 {
    display: none;
  }
}
.hamburger2:hover {
    opacity: 0.7;
}
.hamburger2:focus {
    outline: none;
}


.hamburger-box2 {
    width: 30px;
    height: 12px;
    display: inline-block;
    position: relative; }

.hamburger-inner2 {
  display: block;
  top: 50%;
  margin-top: -2px; }
  .hamburger-inner2, .hamburger-inner2::before, .hamburger-inner2::after {
    width: 30px;
    height: 3px;
    background-color: #fff;
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner2::before, .hamburger-inner2::after {
    content: "";
    display: block; }
  .hamburger-inner2::before {
    top: -7px; }
  .hamburger-inner2::after {
    bottom: -7px; }



/*---------------------------------------*/
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}

  @media (min-width: 610px) {
    .hamburger {
    display: none;
  }
}
.hamburger:hover {
    opacity: 0.7;
}
.hamburger:focus {
    outline: none;
}
.hamburger-box {
  width: 40px;
  height: 24px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -2px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 40px;
    height: 4px;
    background-color: #000;
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -10px; }
  .hamburger-inner::after {
    bottom: -10px; }

/* Spring */
.hamburger--spring .hamburger-inner {
  top: 2px;
  transition: background-color 0s 0.13s linear; }
  .hamburger--spring .hamburger-inner::before {
    top: 10px;
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spring .hamburger-inner::after {
    top: 20px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spring.is-active .hamburger-inner {
  transition-delay: 0.22s;
  background-color: transparent; }
  .hamburger--spring.is-active .hamburger-inner::before {
    top: 0;
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 10px, 0) rotate(45deg); }
  .hamburger--spring.is-active .hamburger-inner::after {
    top: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 10px, 0) rotate(-45deg); }

/*

/* Arrow Turn */
.hamburger--arrowturn.is-active2 .hamburger-inner2 {
  transform: rotate(-270deg); }
  .hamburger--arrowturn.is-active2 .hamburger-inner2::before {
    transform: translate3d(8px, 0, 0) rotate(45deg) scale(0.7, 1); }
  .hamburger--arrowturn.is-active2 .hamburger-inner2::after {
    transform: translate3d(8px, 0, 0) rotate(-45deg) scale(0.7, 1); }
